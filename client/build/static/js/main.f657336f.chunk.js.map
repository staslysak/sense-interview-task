{"version":3,"sources":["redux/auth/reducer.js","redux/index.js","store.js","layouts/app-layout/styles.module.scss","components/app-loader/index.jsx","components/auth-route/index.jsx","components/edit-modal/index.jsx","layouts/app-layout/index.jsx","App.jsx","reportWebVitals.js","index.js","utils/xml.js","utils/jwt.js","redux/auth/types.js","api.js","redux/auth/actions.js"],"names":["DEFAULT_STATE","user","authorized","getToken","combineReducers","auth","state","type","payload","TYPES","login","logout","updateUser","middleware","thunk","store","createStore","reducers","applyMiddleware","module","exports","AppLoader","align","justify","AuthRoute","forceProtect","fallback","props","useSelector","to","EditModal","visible","onClose","onSubmit","Form","useForm","form","initialValues","data","username","_text","password","mapInitialValues","destroyOnClose","title","footer","onCancel","onFinish","validateFields","then","values","resetFields","Item","name","rules","min","placeholder","Password","htmlType","AppLayout","children","useState","edit","setEdit","dispatch","useDispatch","toggleEdit","prev","className","css","Header","danger","icon","DeleteOutlined","onClick","deleteSelf","EditOutlined","logoutAction","Content","updateSelf","routes","path","exact","component","lazy","App","map","Component","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","options","compact","spaces","xml2js","xml","convert","js2xml","js","root","prefix","token","localStorage","getItem","setToken","setItem","removeToken","removeItem","TODO_TYPES","api","axios","create","baseURL","headers","interceptors","response","use","res","err","status","Promise","reject","message","notification","error","description","loginAction","performLogin","post","accessToken","performSignup","getSelf","get","authorization","put","delete"],"mappings":"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","file":"static/js/main.f657336f.chunk.js","sourcesContent":["import { TODO_TYPES as TYPES } from './types';\r\nimport { getToken } from '../../utils';\r\n\r\nconst DEFAULT_STATE = {\r\n    user: {},\r\n    authorized: getToken() ?? false,\r\n};\r\n\r\nexport default (state = DEFAULT_STATE, { type, payload }) => {\r\n    switch (type) {\r\n        case TYPES.login:\r\n            return {\r\n                ...state,\r\n                authorized: true,\r\n                user: payload.user,\r\n            };\r\n        case TYPES.logout:\r\n            return {\r\n                ...state,\r\n                authorized: false,\r\n                user: {},\r\n            };\r\n\r\n        case TYPES.updateUser:\r\n            return {\r\n                ...state,\r\n                user: { ...state.user, ...payload },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './auth/reducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './redux';\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(reducers, applyMiddleware(...middleware));\r\n\r\nexport default store;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-layout\":\"styles_app-layout__2ZY91\",\"app-layout-content\":\"styles_app-layout-content__3x8Vs\"};","import { Spin, Row } from 'antd';\r\n\r\nexport const AppLoader = () => {\r\n    return (\r\n        <Row align='center' justify='center'>\r\n            <Spin />\r\n        </Row>\r\n    );\r\n};\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const AuthRoute = ({\r\n    forceProtect = true,\r\n    fallback = '/login',\r\n    ...props\r\n}) => {\r\n    const authorized = useSelector((state) => state.auth.authorized);\r\n\r\n    return forceProtect ? (\r\n        authorized ? (\r\n            <Route {...props} />\r\n        ) : (\r\n            <Redirect to={fallback} />\r\n        )\r\n    ) : (\r\n        <Route {...props} />\r\n    );\r\n};\r\n","import { Modal, Form, Input, Button, Row, Col } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst mapInitialValues = (data) => {\r\n    return {\r\n        username: data?.username?._text ?? '',\r\n        password: '',\r\n    };\r\n};\r\n\r\nconst EditModal = ({ visible, onClose, onSubmit }) => {\r\n    const [form] = Form.useForm();\r\n    const initialValues = useSelector((state) =>\r\n        mapInitialValues(state.auth.user)\r\n    );\r\n\r\n    const handleSubmit = () => {\r\n        form.validateFields()\r\n            .then((values) => {\r\n                onSubmit(values);\r\n            })\r\n            .then(() => {\r\n                form.resetFields();\r\n                onClose();\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            destroyOnClose\r\n            visible={visible}\r\n            title='Edit user'\r\n            footer={null}\r\n            onCancel={onClose}\r\n        >\r\n            <Form\r\n                form={form}\r\n                initialValues={initialValues}\r\n                onFinish={handleSubmit}\r\n            >\r\n                <Form.Item name='username' rules={[{ min: 5 }]}>\r\n                    <Input placeholder='Username' />\r\n                </Form.Item>\r\n                <Form.Item name='password'>\r\n                    <Input.Password placeholder='Password' />\r\n                </Form.Item>\r\n                <Row justify='center'>\r\n                    <Col>\r\n                        <Button type='primary' htmlType='submit'>\r\n                            Submit\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditModal;\r\n","import { useState } from 'react';\r\nimport { Layout, Button, Space, Row, Col } from 'antd';\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { logoutAction, updateSelf, deleteSelf } from '../../redux/auth/actions';\r\nimport css from './styles.module.scss';\r\nimport EditModal from '../../components/edit-modal';\r\n\r\nexport function AppLayout({ children }) {\r\n    const [edit, setEdit] = useState();\r\n    const dispatch = useDispatch();\r\n    const authorized = useSelector((state) => state.auth.authorized);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logoutAction());\r\n    };\r\n\r\n    const toggleEdit = () => setEdit((prev) => !prev);\r\n\r\n    const handleUpdate = (values) => {\r\n        dispatch(updateSelf(values));\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        dispatch(deleteSelf());\r\n    };\r\n\r\n    return (\r\n        <Layout className={css['app-layout']}>\r\n            {authorized && (\r\n                <Layout.Header>\r\n                    <Row justify='space-between' align='center'>\r\n                        <Col>\r\n                            <Button\r\n                                danger\r\n                                type='primary'\r\n                                icon={<DeleteOutlined />}\r\n                                onClick={handleDelete}\r\n                            >\r\n                                Delete account\r\n                            </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Space>\r\n                                <Button\r\n                                    type='primary'\r\n                                    icon={<EditOutlined />}\r\n                                    onClick={toggleEdit}\r\n                                >\r\n                                    Edit user\r\n                                </Button>\r\n                                <Button type='primary' onClick={handleLogout}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Layout.Header>\r\n            )}\r\n            <Layout.Content className={css['app-layout-content']}>\r\n                {children}\r\n                <EditModal\r\n                    visible={edit}\r\n                    onClose={toggleEdit}\r\n                    onSubmit={handleUpdate}\r\n                />\r\n            </Layout.Content>\r\n        </Layout>\r\n    );\r\n}\r\n","import { Suspense, lazy } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { AppLoader, AuthRoute } from './components';\nimport { AppLayout } from './layouts';\n\nimport 'antd/dist/antd.css';\n\nconst routes = [\n    {\n        path: '/',\n        exact: true,\n        component: lazy(() => import('./pages/home')),\n    },\n    {\n        path: '/(login|signup)',\n        exact: true,\n        component: lazy(() => import('./pages/auth')),\n        forceProtect: false,\n    },\n];\n\nfunction App() {\n    return (\n        <AppLayout>\n            <Switch>\n                {routes.map(({ component: Component, ...route }) => (\n                    <AuthRoute key={route.path} {...route}>\n                        <Suspense fallback={<AppLoader />}>\n                            <Component />\n                        </Suspense>\n                    </AuthRoute>\n                ))}\n                <Route key='*' path='*'>\n                    <Redirect to='/' />\n                </Route>\n            </Switch>\n        </AppLayout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\n\nimport App from './App';\nimport store from './store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <ReduxProvider store={store}>\n                <App />\n            </ReduxProvider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import convert from 'xml-js';\r\n\r\nconst options = {\r\n    compact: true,\r\n    spaces: 2,\r\n};\r\n\r\nexport const xml2js = (xml) => convert.xml2js(xml, { ...options });\r\n\r\nexport const js2xml = (js) => {\r\n    const xml = convert.js2xml({ root: js }, { ...options });\r\n    return xml;\r\n};\r\n","export const getToken = (prefix) => {\r\n    const token = localStorage.getItem('_token');\r\n    return prefix ? `${prefix} ${token}` : token;\r\n};\r\n\r\nexport const setToken = (token) => {\r\n    localStorage.setItem('_token', token);\r\n};\r\n\r\nexport const removeToken = () => {\r\n    localStorage.removeItem('_token');\r\n};\r\n","export const TODO_TYPES = {\r\n    login: 'AUTH_LOGIN',\r\n    logout: 'AUTH_LOGOUT',\r\n    updateUser: 'AUTH_UPDATE_USER',\r\n};\r\n","import axios from 'axios';\r\nimport { notification } from 'antd';\r\n\r\nimport store from './store';\r\nimport { xml2js } from './utils';\r\nimport { logoutAction } from './redux/auth/actions';\r\n\r\nconst api = axios.create({\r\n    baseURL: '/api',\r\n    headers: {\r\n        'Content-Type': 'text/xml',\r\n    },\r\n});\r\n\r\napi.interceptors.response.use(\r\n    (res) => {\r\n        return xml2js(res.data);\r\n    },\r\n    (err) => {\r\n        if (err.response.status === 403) {\r\n            store.dispatch(logoutAction());\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        const { message } = xml2js(err.response.data).root;\r\n\r\n        notification.error({\r\n            message: 'Error',\r\n            description: message._text,\r\n        });\r\n\r\n        return Promise.reject(err);\r\n    }\r\n);\r\n\r\nexport default api;\r\n","import { TODO_TYPES as TYPES } from './types';\r\nimport api from '../../api';\r\nimport { js2xml, getToken, setToken, removeToken } from '../../utils';\r\n\r\nconst loginAction = (payload) => ({ type: TYPES.login, payload });\r\n\r\nexport const performLogin = ({ username, password }) => (dispatch) => {\r\n    api.post(\r\n        '/login',\r\n        js2xml({\r\n            password,\r\n            username,\r\n        })\r\n    ).then((res) => {\r\n        setToken(res.root.accessToken._text);\r\n        dispatch(loginAction(res.root));\r\n    });\r\n};\r\n\r\nexport const performSignup = ({ username, password }) => (dispatch) => {\r\n    api.post(\r\n        '/signup',\r\n        js2xml({\r\n            password,\r\n            username,\r\n        })\r\n    ).then((res) => {\r\n        setToken(res.root.accessToken._text);\r\n        dispatch(loginAction(res.root));\r\n    });\r\n};\r\n\r\nexport const logoutAction = () => (dispatch) => {\r\n    removeToken();\r\n    dispatch({ type: TYPES.logout });\r\n};\r\n\r\nexport const getSelf = () => (dispatch) => {\r\n    api.get('/user', {\r\n        headers: {\r\n            authorization: getToken('Bearer'),\r\n        },\r\n    }).then((res) => {\r\n        dispatch(loginAction(res));\r\n    });\r\n};\r\n\r\nexport const updateSelf = ({ username, password }) => (dispatch) => {\r\n    api.put(\r\n        '/user',\r\n        js2xml({\r\n            password,\r\n            username,\r\n        }),\r\n        {\r\n            headers: {\r\n                authorization: getToken('Bearer'),\r\n            },\r\n        }\r\n    ).then((res) => {\r\n        dispatch({ type: TYPES.updateUser, payload: res.user });\r\n    });\r\n};\r\n\r\nexport const deleteSelf = () => (dispatch) => {\r\n    api.delete('/user', {\r\n        headers: {\r\n            authorization: getToken('Bearer'),\r\n        },\r\n    }).then((res) => {\r\n        dispatch(logoutAction());\r\n    });\r\n};\r\n"],"sourceRoot":""}